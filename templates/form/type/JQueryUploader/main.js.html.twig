<script src="/assets/libraries/blueimp/js/vendor/jquery.ui.widget.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="https://blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="https://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<script src="/assets/libraries/blueimp/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="/assets/libraries/blueimp/js/jquery.fileupload-validate.js"></script>
<script src="/assets/libraries/blueimp/js/jquery.fileupload-ui.js"></script>

<script>
    {% for file in files %}
        $('.generate{{file.id}}').on('click',function(e){
           var generateUrl = $(this).data('url');
           $.ajax({
               url: generateUrl,
               data:{},
               dataType: 'json',
               success: function(data){
                   removeGenerateButton({{file.id}},data);
               },
           });
        });
    {% endfor %}
    function removeGenerateButton(link,data)
    {
        $('.generate'+link).parents('span.size').html('<img width="75px" src="'+data.url+'">');
    }
    $('#{{id}}').fileupload({
        {% if maxNumberOfFiles > 0 %}
        maxNumberOfFiles: {{maxNumberOfFiles}},        
        {% endif %}
        url: '{{uploadUrl}}',
        fileInput: $('#{{id}}'),
        acceptFileTypes: /(\.|\/)({% for type in fileTypes %}{{type}}|{% endfor %})$/i,
            messages: {
                acceptFileTypes: 'File Type Not Allowed',
                maxFileSize: 'File to large'
            },
        filesContainer: $('.files'),
        uploadTemplateId: null,
        downloadTemplateId: null,
        uploadTemplate: function (o) {
            var rows = $();
            $.each(o.files, function (index, file) {
                var row = $('<tr class="template-upload fade">' +
                '<td><p class="name"></p>' +
                '<strong class="error text-danger"></strong>' +
                '<label for="file_description">Description: </label><input type="text" id="file_description" name="file_description" value="">'+
                '</td>' +
                '<td><p class="type"></p>' +
                '<div class="extra-fields"></div>'+
                '</td>' +
                '<td><p class="size"></p>' +
                '<div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">' +
                '<div class="progress-bar progress-bar-success" style="width:0%;"></div></div>' +
                '</td>' +
                '<td>' +
                (!index && !o.options.autoUpload ?
                    '<button id="start-upload" class="btn btn-primary start start-upload" disabled>' +
                    '<i class="glyphicon glyphicon-upload"></i> ' +
                    '<span>Start Upload</span>' +
                    '</button>' : '') +
                    (!index ? '<button class="btn btn-warning cancel" id="cancelUploadBtn">' +
                '<i class="glyphicon glyphicon-ban-circle"></i> ' +
                '<span>Cancel Upload</span>' +
                '</button>' : '') +
                '</td>' +
                '</tr>');
                row.find('.name').text(file.name);
                row.find('.type').text(file.type);
                {% if is_granted('ROLE_ADMIN') %}
                if(~file.type.indexOf("image"))
                {
                    row.find('.extra-fields').html('<label class="form-check-label"><input type="checkbox" name="file_slideshow_enabled" class="form-check-input"> Eligable For Slideshow <i class="fa fa-question-circle pull-right" data-toggle="tooltip" data-placement="top" title="If selected this image could be displayed on the homepage slideshow randomly."></i></label>');
                }
                {% endif %}
                row.find('.size').text(o.formatFileSize(file.size));
                if (file.error) {
                    row.find('.error').text(file.error);
                }
                rows = rows.add(row);
            });
            return rows;
        },
        downloadTemplate: function (o) {
            var rows = $();
            $.each(o.files, function (index, file) {
                var row = $('<tr class="template-download fade">' +
                    '<td><span class="preview"></span></td>' +
                    '<td><p class="name"></p>' +
                    '<p class="description">'+file.description+'</p>'+
                    (file.file_id ? '<input type="hidden" name="{{hiddenFieldName}}[]" value="'+file.file_id+'" />' : '') +
                    (file.error ? '<div class="error"></div>' : '') +
                    '</td>' +
                    '<td><span class="size"></span><p class="extras"></p></td>' +
                    '<td><button class="btn-common delete"><i class="fa fa-trash"></i> Delete '+file.type+'</button></td>' +
                    '</tr>');
                row.find('.size').text(o.formatFileSize(file.size));
                if (file.error) {
                    row.find('.name').text(file.name);
                    row.find('.error').text(file.error);
                } else {
                    row.find('.name').append($('<a></a>').text(file.name));
                    if (file.thumbnailUrl) {
                        row.find('.preview').append(
                                {% if hasPrettyPhoto %}
                                    $('<a rel="prettyPhoto[pp_gal]" href="'+file.url+'"></a>').append(
                                    $('<img width="150px" alt="'+file.description+'" hieght="150px">').prop('src', file.thumbnailUrl)
                                {% else %}
                                    $('<a></a>').append(
                                    $('<img width="150px" hieght="150px">').prop('src', file.thumbnailUrl)
                                {% endif %}
                            )
                        );
                    }
                    if (file.audio) {
                        row.find('.name').append('<audio src="'+file.audio+'" controls=""></audio>');
                    }
                    if (file.video) {
                        row.find('.name').append('<video width="320" height="240" controls><source src="'+file.video+'" type="video/mp4"></video>')
                    }
                    if (file.slideshow) {
                        row.find('.extras').text('Eligable For Slideshow');
                    }
                    if (file.thumbnail) {
                        row.find('.size').append('<img width="75px" src="'+file.thumbnail+'">');
                    }
                    row.find('a')
                        .attr('data-gallery', '')
                        .prop('href', file.url);
                    row.find('button.delete')
                        .attr('data-type', file.delete_type)
                        .attr('data-url', file.delete_url);
                }
                rows = rows.add(row);
            });
            return rows;
        }
    });
    $('#{{id}}').bind('fileuploadsubmit', function (e, data) {
        // The example input, doesn't have to be part of the upload form:
        var uploadBtn = $('#start-upload');
        var mainUploadBtn = $('#{{id}}');
        var input = $('#file_description');
        var example = input.val();
        if (!example) {
            input.focus();
            readInput(input,uploadBtn);
            return false;
        }
        mainUploadBtn.attr('disabled', false);
        return true;
    });
    $('#{{id}}').bind('fileuploadadd', function (e, data) {
        // The example input, doesn't have to be part of the upload form:
        var uploadBtn = $('#{{id}}');
        uploadBtn.attr('disabled',true);
        return true;
    });
    $('#{{id}}').bind('fileuploadadded', function (e, data) {
        // The example input, doesn't have to be part of the upload form:
        var uploadBtn = $('#{{id}}');
        var cancelBtn = $('#cancelUploadBtn');
        listenToCancel(cancelBtn, uploadBtn);
        
        return true;
    });
    $('#{{id}}').bind('fileuploadprocessfail', function (e, data) {
        // The example input, doesn't have to be part of the upload form:
        var uploadBtn = $('#{{id}}');
        var cancelBtn = $('#cancelUploadBtn');
        listenToCancel(cancelBtn, uploadBtn);
        
        return true;
    });
    {% if hasPrettyPhoto == true %}
    $('#{{id}}').bind('fileuploadfinished', function (e, data) {
        $("a[rel^='prettyPhoto']").prettyPhoto({
        animation_speed: '{{prettyPhoto.animationSpeed}}', /* fast/slow/normal */
        slideshow: {{prettyPhoto.slideshowSpeed}}, /* false OR interval time in ms */
        autoplay_slideshow: {{prettyPhoto.autoplay_slideshow}}, /* true/false */
        opacity: {{prettyPhoto.opacity}}, /* Value between 0 and 1 */
        show_title: {{prettyPhoto.show_title}}, /* true/false */
        allow_resize: {{prettyPhoto.allow_resize}}, /* Resize the photos bigger than viewport. true/false */
        default_width: {{prettyPhoto.default_width}},
        default_height: {{prettyPhoto.default_height}},
        counter_separator_label: '{{prettyPhoto.counter_seperator_label}}', /* The separator for the gallery counter 1 "of" 2 */
        theme: '{{prettyPhoto.theme}}', /* light_rounded / dark_rounded / light_square / dark_square / facebook */
        horizontal_padding: {{prettyPhoto.horizontal_padding}}, /* The padding on each side of the picture */
        hideflash: {{prettyPhoto.hideflash}}, /* Hides all the flash object on a page, set to TRUE if flash appears over prettyPhoto */
        wmode: '{{prettyPhoto.wmode}}', /* Set the flash wmode attribute */
        autoplay: {{prettyPhoto.autoplay}}, /* Automatically start videos: True/False */
        modal: {{prettyPhoto.modal}}, /* If set to true, only the close button will close the window */
        deeplinking: {{prettyPhoto.deeplinking}}, /* Allow prettyPhoto to update the url to enable deeplinking. */
        overlay_gallery: {{prettyPhoto.overlay_gallery}}, /* If set to true, a gallery will overlay the fullscreen image on mouse over */
        keyboard_shortcuts: {{prettyPhoto.keyboard_shortcuts}}, /* Set to false if you open forms inside prettyPhoto */
        ie6_fallback: {{prettyPhoto.ie6_fallback}},
        markup: '{{prettyPhoto.markup|raw}}',
        gallery_markup: '{{prettyPhoto.gallery_markup|raw}}',
        image_markup: '{{prettyPhoto.image_markup|raw}}',
        flash_markup: '{{prettyPhoto.flash_markup|raw}}',
        quicktime_markup: '{{prettyPhoto.quicktime_markup|raw}}',
        iframe_markup: '{{prettyPhoto.ifram_markup|raw}}',
        inline_markup: '{{prettyPhoto.inline_markup|raw}}',
        custom_markup: '{{prettyPhoto.custom_markup|raw}}'
    });
    })
    {% endif %}
    function listenToCancel(cancelBtn, uploadBtn)
    {
        $(cancelBtn).on('click',function(e){
           uploadBtn.attr('disabled',false); 
        });
    }
    function readInput(input, uploadBtn)
    {
        $(input).on('input',function(e){
            var example = input.val();
            if(!uploadBtn)
            {
                uploadBtn = $('#upload-btn');
            }
            if(!example)
            {
                input.focus();
                uploadBtn.attr('disabled', true);
            }
            else
            {
                uploadBtn.attr('disabled',false);
            }
        });
    }
    
</script>